%source {
   char *dbgEventNames[3] = {" eval", "MATCH", "nomatc"};
}

%auxil "struct PreprocessorContext *"
%value "char *"


%header {
   #include "preprocessor-buffering.h"
   #include "preprocessor-config.h"
   #include "macro-definitions.h"
}

line
   <- d:define_line
    / u:undef_line
    / i:include_line
    / comment
    / character* <e:eol> { for(int i = 0; i < strlen($1); i++) {bufferInsert(auxil, $1[i]);}; }
    / eof

character
   <- [^\n] { bufferInsert(auxil, $0[0]); }

define_line
   <- d:define_token blank+ <token> _ eol { defineMacro(auxil, d, $1); }
    / d:define_token _ eol                { defineMacro(auxil, d, NULL); }

undef_line
   <- u:undef_token _ eol      { undefineMacro(auxil, u); }

include_line
   <- "#include " blank* "\"" <[^"\""]+> "\"" _ eol { includeFile(auxil, $1); }

define_token
   <- "#define " blank* <token> { $$ = $1; }

undef_token
   <- "#undef " blank* <token> { $$ = $1; }

token
   <- (nonspace+) { $$ = $0; }

_ 
   <- _*
    / (space / comment)*

comment
   <- '/*' ( !'*/' . )* '*/'
    ## error handling ##
    / '/*' ( !'*/' . )*
    {
      perror("Unclosed comment block!\n");
      abort();
    }
    / '//' (!eol .)* eol


nonspace <- (!space .)
space <- blank / eol
blank <- [ \t\v\f]
eol <- '\r\n' / '\n' / '\r'
eof <- !.
